datasource db {
  provider = "postgresql"
  url      = ("postgresql://neondb_owner:npg_doHhpA4CqS9z@ep-nameless-river-adxz741w-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require"")
}


generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String?
  email         String    @unique
  password_hash String
  role          String?   @default("student")
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  Prediction    Prediction[]
  attendance    attendance[]
}

model attendance {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?   @db.Uuid
  date       DateTime  @db.Date
  status     String?   @default("present")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  user       User?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model timetable {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  class_name  String
  department  String
  subject     String
  day_of_week String
  start_time  DateTime @db.Time(6)
  end_time    DateTime @db.Time(6)
}

model Prediction {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String    @db.Uuid
  label      String
  confidence Float     @db.Real
  imageId    String
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
